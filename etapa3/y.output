Terminals unused in grammar

    TOKEN_ERROR


State 27 conflicts: 3 reduce/reduce
State 36 conflicts: 3 reduce/reduce
State 45 conflicts: 3 reduce/reduce
State 59 conflicts: 5 reduce/reduce
State 109 conflicts: 3 reduce/reduce


Grammar

    0 $accept: programa $end

    1 programa: declarationl

    2 declarationl: declaration ';' declarationl
    3             | funct declarationl
    4             | %empty

    5 declaration: tipo TK_IDENTIFIER '=' valor
    6            | tipo TK_IDENTIFIER '[' LIT_INTEIRO ']' valorl

    7 funct: tipo TK_IDENTIFIER '(' param ')' body

    8 param: tipo TK_IDENTIFIER param
    9      | %empty

   10 lcmd: cmd ';' lcmd
   11     | ecmd
   12     | %empty

   13 ecmd: cmd

   14 cmd: body
   15    | KW_ENTAUM '{' lcmd '}' entaum
   16    | TK_IDENTIFIER '=' exp
   17    | TK_IDENTIFIER '[' exp ']' '=' exp
   18    | KW_ESCREVA escreva
   19    | enquanto
   20    | funct
   21    | KW_RETORNE exp
   22    | %empty

   23 exp: TK_IDENTIFIER
   24    | TK_IDENTIFIER '[' valor ']'
   25    | TK_IDENTIFIER '[' TK_IDENTIFIER ']'
   26    | valor
   27    | chamada
   28    | KW_ENTRADA
   29    | exp '=' exp
   30    | exp '-' exp
   31    | exp '+' exp
   32    | exp '*' exp
   33    | exp '/' exp
   34    | exp '<' exp
   35    | exp '>' exp
   36    | exp OPERATOR_LE exp
   37    | exp OPERATOR_GE exp
   38    | exp OPERATOR_EQ exp
   39    | exp OPERATOR_DIF exp
   40    | exp '&' exp
   41    | exp '|' exp
   42    | exp '~' exp
   43    | '(' exp ')'

   44 entaum: se
   45       | KW_SENAUM lcmd se

   46 se: KW_SE '(' exp ')'

   47 chamada: TK_IDENTIFIER '(' in ')'

   48 in: TK_IDENTIFIER in
   49   | valor in
   50   | %empty

   51 enquanto: '{' lcmd '}' KW_ENQUANTO '(' exp ')'

   52 escreva: LIT_STRING escreva
   53        | exp escreva
   54        | %empty

   55 valorl: valor valorl
   56       | %empty

   57 tipo: KW_CARA
   58     | KW_INTE
   59     | KW_REAL

   60 valor: LIT_INTEIRO
   61      | LIT_FLOAT
   62      | LIT_CHAR

   63 body: '{' lcmd '}'
   64     | %empty


Terminals, with rules where they appear

    $end (0) 0
    '&' (38) 40
    '(' (40) 7 43 46 47 51
    ')' (41) 7 43 46 47 51
    '*' (42) 32
    '+' (43) 31
    '-' (45) 30
    '/' (47) 33
    ';' (59) 2 10
    '<' (60) 34
    '=' (61) 5 16 17 29
    '>' (62) 35
    '[' (91) 6 17 24 25
    ']' (93) 6 17 24 25
    '{' (123) 15 51 63
    '|' (124) 41
    '}' (125) 15 51 63
    '~' (126) 42
    error (256)
    KW_CARA (258) 57
    KW_INTE (259) 58
    KW_REAL (260) 59
    KW_SE (261) 46
    KW_ENTAUM (262) 15
    KW_SENAUM (263) 45
    KW_ENQUANTO (264) 51
    KW_ENTRADA (265) 28
    KW_ESCREVA (266) 18
    KW_RETORNE (267) 21
    OPERATOR_LE (268) 36
    OPERATOR_GE (269) 37
    OPERATOR_EQ (270) 38
    OPERATOR_DIF (271) 39
    TK_IDENTIFIER <symbol> (272) 5 6 7 8 16 17 23 24 25 47 48
    LIT_INTEIRO <symbol> (273) 6 60
    LIT_FLOAT <symbol> (274) 61
    LIT_CHAR <symbol> (275) 62
    LIT_STRING <symbol> (276) 52
    TOKEN_ERROR (277)


Nonterminals, with rules where they appear

    $accept (40)
        on left: 0
    programa (41)
        on left: 1
        on right: 0
    declarationl (42)
        on left: 2 3 4
        on right: 1 2 3
    declaration (43)
        on left: 5 6
        on right: 2
    funct (44)
        on left: 7
        on right: 3 20
    param (45)
        on left: 8 9
        on right: 7 8
    lcmd (46)
        on left: 10 11 12
        on right: 10 15 45 51 63
    ecmd (47)
        on left: 13
        on right: 11
    cmd (48)
        on left: 14 15 16 17 18 19 20 21 22
        on right: 10 13
    exp (49)
        on left: 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43
        on right: 16 17 21 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 46 51 53
    entaum (50)
        on left: 44 45
        on right: 15
    se (51)
        on left: 46
        on right: 44 45
    chamada (52)
        on left: 47
        on right: 27
    in (53)
        on left: 48 49 50
        on right: 47 48 49
    enquanto (54)
        on left: 51
        on right: 19
    escreva (55)
        on left: 52 53 54
        on right: 18 52 53
    valorl (56)
        on left: 55 56
        on right: 6 55
    tipo (57)
        on left: 57 58 59
        on right: 5 6 7 8
    valor <ast> (58)
        on left: 60 61 62
        on right: 5 24 26 49 55
    body (59)
        on left: 63 64
        on right: 7 14


State 0

    0 $accept: . programa $end

    KW_CARA  shift, and go to state 1
    KW_INTE  shift, and go to state 2
    KW_REAL  shift, and go to state 3

    $default  reduce using rule 4 (declarationl)

    programa      go to state 4
    declarationl  go to state 5
    declaration   go to state 6
    funct         go to state 7
    tipo          go to state 8


State 1

   57 tipo: KW_CARA .

    $default  reduce using rule 57 (tipo)


State 2

   58 tipo: KW_INTE .

    $default  reduce using rule 58 (tipo)


State 3

   59 tipo: KW_REAL .

    $default  reduce using rule 59 (tipo)


State 4

    0 $accept: programa . $end

    $end  shift, and go to state 9


State 5

    1 programa: declarationl .

    $default  reduce using rule 1 (programa)


State 6

    2 declarationl: declaration . ';' declarationl

    ';'  shift, and go to state 10


State 7

    3 declarationl: funct . declarationl

    KW_CARA  shift, and go to state 1
    KW_INTE  shift, and go to state 2
    KW_REAL  shift, and go to state 3

    $default  reduce using rule 4 (declarationl)

    declarationl  go to state 11
    declaration   go to state 6
    funct         go to state 7
    tipo          go to state 8


State 8

    5 declaration: tipo . TK_IDENTIFIER '=' valor
    6            | tipo . TK_IDENTIFIER '[' LIT_INTEIRO ']' valorl
    7 funct: tipo . TK_IDENTIFIER '(' param ')' body

    TK_IDENTIFIER  shift, and go to state 12


State 9

    0 $accept: programa $end .

    $default  accept


State 10

    2 declarationl: declaration ';' . declarationl

    KW_CARA  shift, and go to state 1
    KW_INTE  shift, and go to state 2
    KW_REAL  shift, and go to state 3

    $default  reduce using rule 4 (declarationl)

    declarationl  go to state 13
    declaration   go to state 6
    funct         go to state 7
    tipo          go to state 8


State 11

    3 declarationl: funct declarationl .

    $default  reduce using rule 3 (declarationl)


State 12

    5 declaration: tipo TK_IDENTIFIER . '=' valor
    6            | tipo TK_IDENTIFIER . '[' LIT_INTEIRO ']' valorl
    7 funct: tipo TK_IDENTIFIER . '(' param ')' body

    '('  shift, and go to state 14
    '['  shift, and go to state 15
    '='  shift, and go to state 16


State 13

    2 declarationl: declaration ';' declarationl .

    $default  reduce using rule 2 (declarationl)


State 14

    7 funct: tipo TK_IDENTIFIER '(' . param ')' body

    KW_CARA  shift, and go to state 1
    KW_INTE  shift, and go to state 2
    KW_REAL  shift, and go to state 3

    $default  reduce using rule 9 (param)

    param  go to state 17
    tipo   go to state 18


State 15

    6 declaration: tipo TK_IDENTIFIER '[' . LIT_INTEIRO ']' valorl

    LIT_INTEIRO  shift, and go to state 19


State 16

    5 declaration: tipo TK_IDENTIFIER '=' . valor

    LIT_INTEIRO  shift, and go to state 20
    LIT_FLOAT    shift, and go to state 21
    LIT_CHAR     shift, and go to state 22

    valor  go to state 23


State 17

    7 funct: tipo TK_IDENTIFIER '(' param . ')' body

    ')'  shift, and go to state 24


State 18

    8 param: tipo . TK_IDENTIFIER param

    TK_IDENTIFIER  shift, and go to state 25


State 19

    6 declaration: tipo TK_IDENTIFIER '[' LIT_INTEIRO . ']' valorl

    ']'  shift, and go to state 26


State 20

   60 valor: LIT_INTEIRO .

    $default  reduce using rule 60 (valor)


State 21

   61 valor: LIT_FLOAT .

    $default  reduce using rule 61 (valor)


State 22

   62 valor: LIT_CHAR .

    $default  reduce using rule 62 (valor)


State 23

    5 declaration: tipo TK_IDENTIFIER '=' valor .

    $default  reduce using rule 5 (declaration)


State 24

    7 funct: tipo TK_IDENTIFIER '(' param ')' . body

    '{'  shift, and go to state 27

    $default  reduce using rule 64 (body)

    body  go to state 28


State 25

    8 param: tipo TK_IDENTIFIER . param

    KW_CARA  shift, and go to state 1
    KW_INTE  shift, and go to state 2
    KW_REAL  shift, and go to state 3

    $default  reduce using rule 9 (param)

    param  go to state 29
    tipo   go to state 18


State 26

    6 declaration: tipo TK_IDENTIFIER '[' LIT_INTEIRO ']' . valorl

    LIT_INTEIRO  shift, and go to state 20
    LIT_FLOAT    shift, and go to state 21
    LIT_CHAR     shift, and go to state 22

    $default  reduce using rule 56 (valorl)

    valorl  go to state 30
    valor   go to state 31


State 27

   63 body: '{' . lcmd '}'

    KW_CARA        shift, and go to state 1
    KW_INTE        shift, and go to state 2
    KW_REAL        shift, and go to state 3
    KW_ENTAUM      shift, and go to state 32
    KW_ESCREVA     shift, and go to state 33
    KW_RETORNE     shift, and go to state 34
    TK_IDENTIFIER  shift, and go to state 35
    '{'            shift, and go to state 36

    '}'       reduce using rule 12 (lcmd)
    '}'       [reduce using rule 22 (cmd)]
    '}'       [reduce using rule 64 (body)]
    ';'       reduce using rule 22 (cmd)
    ';'       [reduce using rule 64 (body)]
    $default  reduce using rule 12 (lcmd)

    funct     go to state 37
    lcmd      go to state 38
    ecmd      go to state 39
    cmd       go to state 40
    enquanto  go to state 41
    tipo      go to state 42
    body      go to state 43


State 28

    7 funct: tipo TK_IDENTIFIER '(' param ')' body .

    $default  reduce using rule 7 (funct)


State 29

    8 param: tipo TK_IDENTIFIER param .

    $default  reduce using rule 8 (param)


State 30

    6 declaration: tipo TK_IDENTIFIER '[' LIT_INTEIRO ']' valorl .

    $default  reduce using rule 6 (declaration)


State 31

   55 valorl: valor . valorl

    LIT_INTEIRO  shift, and go to state 20
    LIT_FLOAT    shift, and go to state 21
    LIT_CHAR     shift, and go to state 22

    $default  reduce using rule 56 (valorl)

    valorl  go to state 44
    valor   go to state 31


State 32

   15 cmd: KW_ENTAUM . '{' lcmd '}' entaum

    '{'  shift, and go to state 45


State 33

   18 cmd: KW_ESCREVA . escreva

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    LIT_STRING     shift, and go to state 48
    '('            shift, and go to state 49

    $default  reduce using rule 54 (escreva)

    exp      go to state 50
    chamada  go to state 51
    escreva  go to state 52
    valor    go to state 53


State 34

   21 cmd: KW_RETORNE . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 54
    chamada  go to state 51
    valor    go to state 53


State 35

   16 cmd: TK_IDENTIFIER . '=' exp
   17    | TK_IDENTIFIER . '[' exp ']' '=' exp

    '['  shift, and go to state 55
    '='  shift, and go to state 56


State 36

   51 enquanto: '{' . lcmd '}' KW_ENQUANTO '(' exp ')'
   63 body: '{' . lcmd '}'

    KW_CARA        shift, and go to state 1
    KW_INTE        shift, and go to state 2
    KW_REAL        shift, and go to state 3
    KW_ENTAUM      shift, and go to state 32
    KW_ESCREVA     shift, and go to state 33
    KW_RETORNE     shift, and go to state 34
    TK_IDENTIFIER  shift, and go to state 35
    '{'            shift, and go to state 36

    '}'       reduce using rule 12 (lcmd)
    '}'       [reduce using rule 22 (cmd)]
    '}'       [reduce using rule 64 (body)]
    ';'       reduce using rule 22 (cmd)
    ';'       [reduce using rule 64 (body)]
    $default  reduce using rule 12 (lcmd)

    funct     go to state 37
    lcmd      go to state 57
    ecmd      go to state 39
    cmd       go to state 40
    enquanto  go to state 41
    tipo      go to state 42
    body      go to state 43


State 37

   20 cmd: funct .

    $default  reduce using rule 20 (cmd)


State 38

   63 body: '{' lcmd . '}'

    '}'  shift, and go to state 58


State 39

   11 lcmd: ecmd .

    $default  reduce using rule 11 (lcmd)


State 40

   10 lcmd: cmd . ';' lcmd
   13 ecmd: cmd .

    ';'  shift, and go to state 59

    $default  reduce using rule 13 (ecmd)


State 41

   19 cmd: enquanto .

    $default  reduce using rule 19 (cmd)


State 42

    7 funct: tipo . TK_IDENTIFIER '(' param ')' body

    TK_IDENTIFIER  shift, and go to state 60


State 43

   14 cmd: body .

    $default  reduce using rule 14 (cmd)


State 44

   55 valorl: valor valorl .

    $default  reduce using rule 55 (valorl)


State 45

   15 cmd: KW_ENTAUM '{' . lcmd '}' entaum

    KW_CARA        shift, and go to state 1
    KW_INTE        shift, and go to state 2
    KW_REAL        shift, and go to state 3
    KW_ENTAUM      shift, and go to state 32
    KW_ESCREVA     shift, and go to state 33
    KW_RETORNE     shift, and go to state 34
    TK_IDENTIFIER  shift, and go to state 35
    '{'            shift, and go to state 36

    '}'       reduce using rule 12 (lcmd)
    '}'       [reduce using rule 22 (cmd)]
    '}'       [reduce using rule 64 (body)]
    ';'       reduce using rule 22 (cmd)
    ';'       [reduce using rule 64 (body)]
    $default  reduce using rule 12 (lcmd)

    funct     go to state 37
    lcmd      go to state 61
    ecmd      go to state 39
    cmd       go to state 40
    enquanto  go to state 41
    tipo      go to state 42
    body      go to state 43


State 46

   28 exp: KW_ENTRADA .

    $default  reduce using rule 28 (exp)


State 47

   23 exp: TK_IDENTIFIER .
   24    | TK_IDENTIFIER . '[' valor ']'
   25    | TK_IDENTIFIER . '[' TK_IDENTIFIER ']'
   47 chamada: TK_IDENTIFIER . '(' in ')'

    '('  shift, and go to state 62
    '['  shift, and go to state 63

    $default  reduce using rule 23 (exp)


State 48

   52 escreva: LIT_STRING . escreva

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    LIT_STRING     shift, and go to state 48
    '('            shift, and go to state 49

    $default  reduce using rule 54 (escreva)

    exp      go to state 50
    chamada  go to state 51
    escreva  go to state 64
    valor    go to state 53


State 49

   43 exp: '(' . exp ')'

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 65
    chamada  go to state 51
    valor    go to state 53


State 50

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp
   53 escreva: exp . escreva

    KW_ENTRADA     shift, and go to state 46
    OPERATOR_LE    shift, and go to state 66
    OPERATOR_GE    shift, and go to state 67
    OPERATOR_EQ    shift, and go to state 68
    OPERATOR_DIF   shift, and go to state 69
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    LIT_STRING     shift, and go to state 48
    '('            shift, and go to state 49
    '&'            shift, and go to state 70
    '|'            shift, and go to state 71
    '~'            shift, and go to state 72
    '<'            shift, and go to state 73
    '>'            shift, and go to state 74
    '='            shift, and go to state 75
    '+'            shift, and go to state 76
    '-'            shift, and go to state 77
    '*'            shift, and go to state 78
    '/'            shift, and go to state 79

    $default  reduce using rule 54 (escreva)

    exp      go to state 50
    chamada  go to state 51
    escreva  go to state 80
    valor    go to state 53


State 51

   27 exp: chamada .

    $default  reduce using rule 27 (exp)


State 52

   18 cmd: KW_ESCREVA escreva .

    $default  reduce using rule 18 (cmd)


State 53

   26 exp: valor .

    $default  reduce using rule 26 (exp)


State 54

   21 cmd: KW_RETORNE exp .
   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '&'           shift, and go to state 70
    '|'           shift, and go to state 71
    '~'           shift, and go to state 72
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 21 (cmd)


State 55

   17 cmd: TK_IDENTIFIER '[' . exp ']' '=' exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 81
    chamada  go to state 51
    valor    go to state 53


State 56

   16 cmd: TK_IDENTIFIER '=' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 82
    chamada  go to state 51
    valor    go to state 53


State 57

   51 enquanto: '{' lcmd . '}' KW_ENQUANTO '(' exp ')'
   63 body: '{' lcmd . '}'

    '}'  shift, and go to state 83


State 58

   63 body: '{' lcmd '}' .

    $default  reduce using rule 63 (body)


State 59

   10 lcmd: cmd ';' . lcmd

    KW_CARA        shift, and go to state 1
    KW_INTE        shift, and go to state 2
    KW_REAL        shift, and go to state 3
    KW_ENTAUM      shift, and go to state 32
    KW_ESCREVA     shift, and go to state 33
    KW_RETORNE     shift, and go to state 34
    TK_IDENTIFIER  shift, and go to state 35
    '{'            shift, and go to state 36

    KW_SE     reduce using rule 12 (lcmd)
    KW_SE     [reduce using rule 22 (cmd)]
    KW_SE     [reduce using rule 64 (body)]
    '}'       reduce using rule 12 (lcmd)
    '}'       [reduce using rule 22 (cmd)]
    '}'       [reduce using rule 64 (body)]
    ';'       reduce using rule 22 (cmd)
    ';'       [reduce using rule 64 (body)]
    $default  reduce using rule 12 (lcmd)

    funct     go to state 37
    lcmd      go to state 84
    ecmd      go to state 39
    cmd       go to state 40
    enquanto  go to state 41
    tipo      go to state 42
    body      go to state 43


State 60

    7 funct: tipo TK_IDENTIFIER . '(' param ')' body

    '('  shift, and go to state 14


State 61

   15 cmd: KW_ENTAUM '{' lcmd . '}' entaum

    '}'  shift, and go to state 85


State 62

   47 chamada: TK_IDENTIFIER '(' . in ')'

    TK_IDENTIFIER  shift, and go to state 86
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22

    $default  reduce using rule 50 (in)

    in     go to state 87
    valor  go to state 88


State 63

   24 exp: TK_IDENTIFIER '[' . valor ']'
   25    | TK_IDENTIFIER '[' . TK_IDENTIFIER ']'

    TK_IDENTIFIER  shift, and go to state 89
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22

    valor  go to state 90


State 64

   52 escreva: LIT_STRING escreva .

    $default  reduce using rule 52 (escreva)


State 65

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp
   43    | '(' exp . ')'

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    ')'           shift, and go to state 91
    '&'           shift, and go to state 70
    '|'           shift, and go to state 71
    '~'           shift, and go to state 72
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79


State 66

   36 exp: exp OPERATOR_LE . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 92
    chamada  go to state 51
    valor    go to state 53


State 67

   37 exp: exp OPERATOR_GE . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 93
    chamada  go to state 51
    valor    go to state 53


State 68

   38 exp: exp OPERATOR_EQ . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 94
    chamada  go to state 51
    valor    go to state 53


State 69

   39 exp: exp OPERATOR_DIF . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 95
    chamada  go to state 51
    valor    go to state 53


State 70

   40 exp: exp '&' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 96
    chamada  go to state 51
    valor    go to state 53


State 71

   41 exp: exp '|' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 97
    chamada  go to state 51
    valor    go to state 53


State 72

   42 exp: exp '~' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 98
    chamada  go to state 51
    valor    go to state 53


State 73

   34 exp: exp '<' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 99
    chamada  go to state 51
    valor    go to state 53


State 74

   35 exp: exp '>' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 100
    chamada  go to state 51
    valor    go to state 53


State 75

   29 exp: exp '=' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 101
    chamada  go to state 51
    valor    go to state 53


State 76

   31 exp: exp '+' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 102
    chamada  go to state 51
    valor    go to state 53


State 77

   30 exp: exp '-' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 103
    chamada  go to state 51
    valor    go to state 53


State 78

   32 exp: exp '*' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 104
    chamada  go to state 51
    valor    go to state 53


State 79

   33 exp: exp '/' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 105
    chamada  go to state 51
    valor    go to state 53


State 80

   53 escreva: exp escreva .

    $default  reduce using rule 53 (escreva)


State 81

   17 cmd: TK_IDENTIFIER '[' exp . ']' '=' exp
   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    ']'           shift, and go to state 106
    '&'           shift, and go to state 70
    '|'           shift, and go to state 71
    '~'           shift, and go to state 72
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79


State 82

   16 cmd: TK_IDENTIFIER '=' exp .
   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '&'           shift, and go to state 70
    '|'           shift, and go to state 71
    '~'           shift, and go to state 72
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 16 (cmd)


State 83

   51 enquanto: '{' lcmd '}' . KW_ENQUANTO '(' exp ')'
   63 body: '{' lcmd '}' .

    KW_ENQUANTO  shift, and go to state 107

    $default  reduce using rule 63 (body)


State 84

   10 lcmd: cmd ';' lcmd .

    $default  reduce using rule 10 (lcmd)


State 85

   15 cmd: KW_ENTAUM '{' lcmd '}' . entaum

    KW_SE      shift, and go to state 108
    KW_SENAUM  shift, and go to state 109

    entaum  go to state 110
    se      go to state 111


State 86

   48 in: TK_IDENTIFIER . in

    TK_IDENTIFIER  shift, and go to state 86
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22

    $default  reduce using rule 50 (in)

    in     go to state 112
    valor  go to state 88


State 87

   47 chamada: TK_IDENTIFIER '(' in . ')'

    ')'  shift, and go to state 113


State 88

   49 in: valor . in

    TK_IDENTIFIER  shift, and go to state 86
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22

    $default  reduce using rule 50 (in)

    in     go to state 114
    valor  go to state 88


State 89

   25 exp: TK_IDENTIFIER '[' TK_IDENTIFIER . ']'

    ']'  shift, and go to state 115


State 90

   24 exp: TK_IDENTIFIER '[' valor . ']'

    ']'  shift, and go to state 116


State 91

   43 exp: '(' exp ')' .

    $default  reduce using rule 43 (exp)


State 92

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   36    | exp OPERATOR_LE exp .
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 36 (exp)


State 93

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   37    | exp OPERATOR_GE exp .
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 37 (exp)


State 94

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   38    | exp OPERATOR_EQ exp .
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 38 (exp)


State 95

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   39    | exp OPERATOR_DIF exp .
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    '+'  shift, and go to state 76
    '-'  shift, and go to state 77
    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 39 (exp)


State 96

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   40    | exp '&' exp .
   41    | exp . '|' exp
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 40 (exp)


State 97

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   41    | exp '|' exp .
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 41 (exp)


State 98

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp
   42    | exp '~' exp .

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 42 (exp)


State 99

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   34    | exp '<' exp .
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 34 (exp)


State 100

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   35    | exp '>' exp .
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 35 (exp)


State 101

   29 exp: exp . '=' exp
   29    | exp '=' exp .
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 29 (exp)


State 102

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   31    | exp '+' exp .
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 31 (exp)


State 103

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   30    | exp '-' exp .
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    '*'  shift, and go to state 78
    '/'  shift, and go to state 79

    $default  reduce using rule 30 (exp)


State 104

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   32    | exp '*' exp .
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    $default  reduce using rule 32 (exp)


State 105

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   33    | exp '/' exp .
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    $default  reduce using rule 33 (exp)


State 106

   17 cmd: TK_IDENTIFIER '[' exp ']' . '=' exp

    '='  shift, and go to state 117


State 107

   51 enquanto: '{' lcmd '}' KW_ENQUANTO . '(' exp ')'

    '('  shift, and go to state 118


State 108

   46 se: KW_SE . '(' exp ')'

    '('  shift, and go to state 119


State 109

   45 entaum: KW_SENAUM . lcmd se

    KW_CARA        shift, and go to state 1
    KW_INTE        shift, and go to state 2
    KW_REAL        shift, and go to state 3
    KW_ENTAUM      shift, and go to state 32
    KW_ESCREVA     shift, and go to state 33
    KW_RETORNE     shift, and go to state 34
    TK_IDENTIFIER  shift, and go to state 35
    '{'            shift, and go to state 36

    KW_SE     reduce using rule 12 (lcmd)
    KW_SE     [reduce using rule 22 (cmd)]
    KW_SE     [reduce using rule 64 (body)]
    ';'       reduce using rule 22 (cmd)
    ';'       [reduce using rule 64 (body)]
    $default  reduce using rule 12 (lcmd)

    funct     go to state 37
    lcmd      go to state 120
    ecmd      go to state 39
    cmd       go to state 40
    enquanto  go to state 41
    tipo      go to state 42
    body      go to state 43


State 110

   15 cmd: KW_ENTAUM '{' lcmd '}' entaum .

    $default  reduce using rule 15 (cmd)


State 111

   44 entaum: se .

    $default  reduce using rule 44 (entaum)


State 112

   48 in: TK_IDENTIFIER in .

    $default  reduce using rule 48 (in)


State 113

   47 chamada: TK_IDENTIFIER '(' in ')' .

    $default  reduce using rule 47 (chamada)


State 114

   49 in: valor in .

    $default  reduce using rule 49 (in)


State 115

   25 exp: TK_IDENTIFIER '[' TK_IDENTIFIER ']' .

    $default  reduce using rule 25 (exp)


State 116

   24 exp: TK_IDENTIFIER '[' valor ']' .

    $default  reduce using rule 24 (exp)


State 117

   17 cmd: TK_IDENTIFIER '[' exp ']' '=' . exp

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 121
    chamada  go to state 51
    valor    go to state 53


State 118

   51 enquanto: '{' lcmd '}' KW_ENQUANTO '(' . exp ')'

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 122
    chamada  go to state 51
    valor    go to state 53


State 119

   46 se: KW_SE '(' . exp ')'

    KW_ENTRADA     shift, and go to state 46
    TK_IDENTIFIER  shift, and go to state 47
    LIT_INTEIRO    shift, and go to state 20
    LIT_FLOAT      shift, and go to state 21
    LIT_CHAR       shift, and go to state 22
    '('            shift, and go to state 49

    exp      go to state 123
    chamada  go to state 51
    valor    go to state 53


State 120

   45 entaum: KW_SENAUM lcmd . se

    KW_SE  shift, and go to state 108

    se  go to state 124


State 121

   17 cmd: TK_IDENTIFIER '[' exp ']' '=' exp .
   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    '&'           shift, and go to state 70
    '|'           shift, and go to state 71
    '~'           shift, and go to state 72
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79

    $default  reduce using rule 17 (cmd)


State 122

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp
   51 enquanto: '{' lcmd '}' KW_ENQUANTO '(' exp . ')'

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    ')'           shift, and go to state 125
    '&'           shift, and go to state 70
    '|'           shift, and go to state 71
    '~'           shift, and go to state 72
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79


State 123

   29 exp: exp . '=' exp
   30    | exp . '-' exp
   31    | exp . '+' exp
   32    | exp . '*' exp
   33    | exp . '/' exp
   34    | exp . '<' exp
   35    | exp . '>' exp
   36    | exp . OPERATOR_LE exp
   37    | exp . OPERATOR_GE exp
   38    | exp . OPERATOR_EQ exp
   39    | exp . OPERATOR_DIF exp
   40    | exp . '&' exp
   41    | exp . '|' exp
   42    | exp . '~' exp
   46 se: KW_SE '(' exp . ')'

    OPERATOR_LE   shift, and go to state 66
    OPERATOR_GE   shift, and go to state 67
    OPERATOR_EQ   shift, and go to state 68
    OPERATOR_DIF  shift, and go to state 69
    ')'           shift, and go to state 126
    '&'           shift, and go to state 70
    '|'           shift, and go to state 71
    '~'           shift, and go to state 72
    '<'           shift, and go to state 73
    '>'           shift, and go to state 74
    '='           shift, and go to state 75
    '+'           shift, and go to state 76
    '-'           shift, and go to state 77
    '*'           shift, and go to state 78
    '/'           shift, and go to state 79


State 124

   45 entaum: KW_SENAUM lcmd se .

    $default  reduce using rule 45 (entaum)


State 125

   51 enquanto: '{' lcmd '}' KW_ENQUANTO '(' exp ')' .

    $default  reduce using rule 51 (enquanto)


State 126

   46 se: KW_SE '(' exp ')' .

    $default  reduce using rule 46 (se)
